import requests
import sqlite3
import time


from settings import *


# ====== –õ–æ–≥–∏–Ω–∏–º—Å—è =========
def login(login_url):
    session = requests.Session() 

    headers = {
        'User-Agent': 'Mozilla/5.0',
        'Origin': login_url  
    }
    
    
    session.get(login_url, headers=headers)

    with open(LOGIN_FILE) as f:
        email = f.readline().strip()
        password = f.readline().strip()

    login_data = {'email': email, 'password': password}
    session.post(login_url, data=login_data, headers=headers)

    return session

#======== –°–∫–∞—á–∏–≤–∞–µ–º –±–¥ ==========
def download_db(session):
    print("–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –±–∞–∑—ã...")
    
    resp = session.get(f"{BASE_URL}/files?file=../../app/data/database.sqlite", timeout=30)
    if resp.status_code == 200:
        with open(DB_PATH, 'wb') as f:
            f.write(resp.content)
        print("–ë–∞–∑–∞ —Å–∫–∞—á–∞–Ω–∞!")
    else:
        raise Exception(f"–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {resp.status_code}")

#========== –í—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º —Ñ–ª–∞–≥–∏ –∏–∑ –±–¥ =========
def extract_flags_from_db():
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()
    cursor.execute("SELECT content FROM posts")  # –¢–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    rows = cursor.fetchall()
    conn.close()
    
    flags = {row[0] for row in rows if row[0].startswith("flag{")}
    print(f"–ù–∞–π–¥–µ–Ω–æ {len(flags)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ñ–ª–∞–≥–æ–≤.")
    return flags

#========== –ü—Ä–æ–≤–µ—Ä—è–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ñ–ª–∞–≥ =======
def check_flag(flag,session):
    try:
        resp = session.get(CHECK_URL + flag, timeout=10)
        if resp.text.strip() == "–í–µ—Ä–Ω—ã–π —Ñ–ª–∞–≥":
            print(f"‚úÖ –í–µ—Ä–Ω—ã–π —Ñ–ª–∞–≥: {flag}")
            return True
        else:
            print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π: {flag}")
            return False
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ {flag}: {e}")
        return False

#========= –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ñ–ª–∞–≥–∏ ==========
def check_flags(flags, session):
    for flag in flags:
        # –µ—Å–ª–∏ –Ω–∞—à–ª–∏ –Ω—É–∂–Ω—ã–π —Ñ–ª–∞–≥, –æ–±—Ä—É–±–∞–µ–º
        if check_flag(flag, session):
            return 1
    return 0

def get_new_flags(all_flags, FLAGS_FILE):
    f = open(FLAGS_FILE, "r+")
    checked_flags = {i.strip() for i in f.readlines()}
    
    new_flags = all_flags.difference(checked_flags)
    # –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Ñ–ª–∞–≥–∏ –≤ —Ñ–∞–π–ª
    for i in new_flags:
        f.write(i+'\n')
    f.close()
    return new_flags

# === –û—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫ ===

try:
    while True:
        # –ª–æ–≥–∏–Ω–∏–º—Å—è
        session = login(LOGIN_URL)

        # —Å–∫–∞—á–∏–≤–∞–µ–º –±–¥
        download_db(session)

        # –¥–æ—Å—Ç–∞–µ–º –æ—Ç—Ç—É–¥–∞ —Ñ–ª–∞–≥–∏
        all_flags = extract_flags_from_db()
        
        # –¥–æ—Å—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ —Ñ–ª–∞–≥–∏, —Å—Ç–∞—Ä—ã–µ —É–∂–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã
        new_flags = get_new_flags(all_flags, FLAGS_FILE)

        print("‚ò†Ô∏è –ù–∞—á–∏–Ω–∞—é –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Ñ–ª–∞–≥–∏... ‚ò†Ô∏è")
        time_start = time.time()
        if check_flags(new_flags, session):
            print("‚úÖ –§–ª–∞–≥–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã, –Ω–∞–π–¥–µ–Ω –Ω—É–∂–Ω—ã–π —Ñ–ª–∞–≥!")
            
        else:
            print("üßê –í—Å–µ —Ñ–ª–∞–≥–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã.")

        time_finish = time.time()

        check_time = (time_finish - time_start)
        
        print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–ª–∞—Å—å {check_time:.3f} —Å–µ–∫—É–Ω–¥!")
        print(f"üò¥ –ü–æ—Å–ø–∏–º {SLEEP_TIME} —Å–µ–∫—É–Ω–¥ ...")
        time.sleep(SLEEP_TIME)
except KeyboardInterrupt:
    print("\nCTRL+C...")
